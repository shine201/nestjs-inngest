version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ecommerce-postgres
    environment:
      POSTGRES_DB: ecommerce_example
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: ecommerce-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  mailhog:
    image: mailhog/mailhog:latest
    container_name: ecommerce-mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /maildir
    volumes:
      - mailhog_data:/maildir

  inngest:
    image: inngest/inngest:latest
    container_name: ecommerce-inngest
    ports:
      - "8288:8288"
    environment:
      INNGEST_DEV: true
      INNGEST_LOG_LEVEL: debug
    volumes:
      - inngest_data:/data

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce-app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      inngest:
        condition: service_started
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      REDIS_HOST: redis
      SMTP_HOST: mailhog
      INNGEST_DEV_SERVER_URL: http://inngest:8288
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run start:prod

volumes:
  postgres_data:
  redis_data:
  mailhog_data:
  inngest_data: